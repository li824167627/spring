<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<!-- namespace命名空间，作用是对SQL进行分类化管理，理解SQl隔离
注意：使用mapper代理方法开发，namespace有特殊重要的作用 -->
<mapper namespace="test">

	<!--在映射文件中配置很多SQl语句  -->
	<!-- 需求：通过id查询用户表的记录 -->
	<!-- 通过SELECT执行数据库查询
	id:表示映射文件中的SQl 
	将SQl语句封装带mappedStatement对象中，所以将id称为statement的id
	parameterType:指定输入参数的类型，这里指定int类型
	#{}表示一个占位符
	#{id}:其中的id表示接入输入的参数，参数名称就是id，如果输入的参数是简单类型，#{}中的参数名可以任意，可以value活其他名称
	
	resultType:指定sql输出结果的所映射的java对象类型，select指定resultType表示将单条记录映射成的java对象。
	-->
	<select id="findUserById" parameterType="int" resultType="cn.itcast.mybatis.po.User">
		SELECT * FROM USER WHERE id=#{value}
	</select>
	
	<!-- 根据用户名称模糊查询用户信息，可能返回多条 
	resultType:指定就是单条记录所映射的java对象类型
	${}:表示拼接sql串，将接收到的参数内容不加任何修饰拼接在sql中。
	使用${}拼接sql，引起sql注入不建议使用
	${value}:接收输入参数的内容，如果传入的类型是简单类型，${}中只能使用value
	-->
	<select id="findUserByName" parameterType="java.lang.String" resultType="cn.itcast.mybatis.po.User">
		SELECT * FROM USER WHERE username LIKE '%${value}%'
	</select>
	
	<!-- 添加用户 
	parameterType:指定输入参数类型是pojo（包括用户信息）
	#{}中指定pojo的属性名，接收到pojo对象的属性值，mybatis通过ognl获取对象的属性值-->
	<insert id="insertUser" parameterType="cn.itcast.mybatis.po.User">
	<!-- 将插入数据的主键返回，返回到user对象中
	
	SELECT LAST_INSERT_ID();得到刚insert进去记录的主键值，只适用于自增主键
	
	keyProperty:将查询到的主键值设置到parameterType指定的对象的哪个属性
	order：SELECT LAST_INSERT_ID()执行顺序，相对于insert语句来说它的执行顺序
	 -->
	<selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
		SELECT LAST_INSERT_ID()
	</selectKey>
		insert into user (username,birthday,sex,address) value(#{username},#{birthday},#{sex},#{address})
	</insert>
	
	<!-- 删除用户 
	根据用户id删除-->
	<delete id="deleteUser" parameterType="java.lang.Integer">
		delete from user where id=#{id}
	</delete>
	
	<!-- 更新用户 
	需要传入用户的id
	需要传入用户的更新信息
	parameterType指定user对象，包括id和更新信息，注意：id必须存在
	#{id}：从输入user对象中获取id的属性-->
	<update id="updateUser" parameterType="cn.itcast.mybatis.po.User">
		update user set username=#{username},sex=#{sex},birthday={birthday},address=#{address}
		where id=#{id}
	</update>
</mapper>
